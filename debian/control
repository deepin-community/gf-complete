Source: gf-complete
Section: libs
Priority: optional
Maintainer: Debian OpenStack <team+openstack@tracker.debian.org>
Uploaders:
 Thomas Goirand <zigo@debian.org>,
 Shengjing Zhu <zhsj@debian.org>,
Build-Depends:
 debhelper-compat (= 10),
 qemu-user-static [amd64] <!nocheck>,
Standards-Version: 4.1.4
Homepage: http://jerasure.org/
Vcs-Git: https://salsa.debian.org/openstack-team/third-party/gf-complete.git
Vcs-Browser: https://salsa.debian.org/openstack-team/third-party/gf-complete

Package: gf-complete-tools
Section: math
Architecture: any
Depends:
 libgf-complete1 (= ${binary:Version}),
 ${misc:Depends},
 ${shlibs:Depends},
Description: Galois Field Arithmetic - tools
 Galois Field arithmetic forms the backbone of erasure-coded storage systems,
 most famously the Reed-Solomon erasure code. A Galois Field is defined over
 w-bit words and is termed GF(2^w). As such, the elements of a Galois Field are
 the integers 0, 1, . . ., 2^w − 1. Galois Field arithmetic defines addition
 and multiplication over these closed sets of integers in such a way that they
 work as you would hope they would work. Specifically, every number has a
 unique multiplicative inverse. Moreover, there is a value, typically the value
 2, which has the property that you can enumerate all of the non-zero elements
 of the field by taking that value to successively higher powers.
 .
 This package contains miscellaneous tools for working with gf-complete.

Package: libgf-complete-dev
Section: libdevel
Architecture: any
Depends:
 libgf-complete1 (= ${binary:Version}),
 ${misc:Depends},
 ${shlibs:Depends},
Multi-Arch: same
Description: Galois Field Arithmetic - development files
 Galois Field arithmetic forms the backbone of erasure-coded storage systems,
 most famously the Reed-Solomon erasure code. A Galois Field is defined over
 w-bit words and is termed GF(2^w). As such, the elements of a Galois Field are
 the integers 0, 1, . . ., 2^w − 1. Galois Field arithmetic defines addition
 and multiplication over these closed sets of integers in such a way that they
 work as you would hope they would work. Specifically, every number has a
 unique multiplicative inverse. Moreover, there is a value, typically the value
 2, which has the property that you can enumerate all of the non-zero elements
 of the field by taking that value to successively higher powers.
 .
 This package contains the development files needed to build against the shared
 library.

Package: libgf-complete1
Architecture: any
Depends:
 ${misc:Depends},
 ${shlibs:Depends},
Multi-Arch: same
Description: Galois Field Arithmetic - shared library
 Galois Field arithmetic forms the backbone of erasure-coded storage systems,
 most famously the Reed-Solomon erasure code. A Galois Field is defined over
 w-bit words and is termed GF(2^w). As such, the elements of a Galois Field are
 the integers 0, 1, . . ., 2^w − 1. Galois Field arithmetic defines addition
 and multiplication over these closed sets of integers in such a way that they
 work as you would hope they would work. Specifically, every number has a
 unique multiplicative inverse. Moreover, there is a value, typically the value
 2, which has the property that you can enumerate all of the non-zero elements
 of the field by taking that value to successively higher powers.
 .
 This package contains the shared library.
